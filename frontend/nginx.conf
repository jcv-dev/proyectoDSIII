server {
  listen 80;
  server_name localhost;

  # Define the root directory for all requests within this server block.
  root /usr/share/nginx/html;
  index index.html;

  # Force Nginx to log access requests to standard output (stdout).
  access_log /dev/stdout;
  # Force Nginx to log errors to standard error (stderr).
  error_log /dev/stderr;

  # This location block uses a regular expression to match requests for static files
  # (JavaScript, CSS, images, fonts, and the favicon).
  # The `~*` makes the match case-insensitive.
  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|eot|otf|ttf|woff|woff2)$ {
    # Try to serve the requested URI ($uri) directly from the root.
    # If the file is not found, return a 404 Not Found error.
    try_files $uri =404;

    # Optional: Configure caching headers for static assets.
    # 'expires 1y' tells browsers to cache the file for one year.
    # 'add_header Cache-Control "public, immutable"' further optimizes caching,
    # especially for files with content hashes (like Vite's output).
    expires 1y;
    add_header Cache-Control "public, immutable";
  }

  # This location block handles all other requests that haven't been matched by
  # the static file regex above. This is crucial for client-side routing.
  location / {
    # First, try to serve the exact requested URI as a file (e.g., /about).
    # Second, if it's not a file, try to serve it as a directory (e.g., /some-dir/ becomes /some-dir/index.html).
    # Finally, if neither of the above works, serve the main index.html file.
    # This ensures that all valid routes are handled by your React application.
    try_files $uri $uri/ /index.html;
  }
}
